[tool.poetry]
name = "linda-xdr"
version = "0.1.0"
description = "Sentinel XDR - Extended Detection and Response System"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
package-mode = false


[tool.poetry.dependencies]
python = "^3.10"

# Core FastAPI and web framework
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
pydantic = "^2.5.0"

# Database and ORM
sqlalchemy = "^2.0.23"
alembic = "^1.12.1"
psycopg2-binary = "^2.9.9"

# Redis and task queue
redis = "^5.0.1"
arq = "^0.25.0"

# AI/ML libraries optimized for ARM - CPU versions only
torch = "^2.1.0+cpu"
transformers = "^4.51.3"
tokenizers = "^0.15.0"
# Lightweight alternatives for ARM
sentence-transformers = "^2.2.2"

# HTTP client
httpx = "^0.25.2"
requests = "^2.31.0"

# Environment and configuration
python-dotenv = "^1.0.0"
pydantic-settings = "^2.0.3"

# Logging and monitoring
structlog = "^23.2.0"

# Utilities
python-multipart = "^0.0.6"
email-validator = "^2.1.0"

# Security
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-jose = {extras = ["cryptography"], version = "^3.3.0"}

# Date handling
python-dateutil = "^2.8.2"

# JSON handling
orjson = "^3.9.10"

# For rule-based compliance analysis fallback
scikit-learn = "^1.3.2"
numpy = "^2.1.0"

# Add any other dependencies you currently have
# (You can add them from your existing pyproject.toml)
reportlab = "^4.4.3"
fastadmin = {extras = ["fastapi", "sqlalchemy"], version = "^0.2.22"}
qdrant-client = "^1.15.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
black = "^23.11.0"
isort = "^5.12.0"
flake8 = "^6.1.0"
mypy = "^1.7.1"

# PyTorch CPU-only source for ARM compatibility
[[tool.poetry.source]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
priority = "supplemental"

[tool.black]
line-length = 88
target-version = ['py313']
include = '\.pyi?'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
